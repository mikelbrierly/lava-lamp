:root {
  --main-bg: white;
  /* --lava-color1: #9FD7AD;
  --lava-color2: #E4B856;
  --lava-color3: #272727; */
  --lava-color1: red;
  --lava-color2: blue;
  --lava-color3: green;
  --fallback-lava-color: orange;
}

body {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: var(--main-bg);
  box-sizing: border-box;
  margin: 3em;
}

.card {
  box-sizing: border-box;
  will-change: opacity;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  width: 100%;
  max-width: 1500px;
  min-height: 200px;
  padding: 10px;
}

.border-gradient {
  position: absolute;
  width: 100%;
  height: 100%;
  background: linear-gradient(20deg, var(--lava-color1), var(--lava-color2) 50%, var(--lava-color3) 70%);
  overflow: hidden;
}

/* .border-gradient::before, .border-gradient::after {
  content: "";
  width: 100%;
  height: 100%;
  position: absolute;
  animation: rotate-color 7s linear infinite;
}

.border-gradient::before {
  background: linear-gradient(-20deg, var(--lava-color2), var(--lava-color1));
}

.border-gradient::after {
  background: linear-gradient(20deg, var(--lava-color3), transparent);
} */

hr {
  width: 100%;
  border-style: solid;
}

main {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: var(--main-bg);
  color: #000000;
  mix-blend-mode: color-dodge; /* this here is where it all happens... we should have an alternative */
  font-size: 10em;
  font-weight: bolder;
  font-family: serif;
  letter-spacing: -0.07em;
  line-height: .7em;
  overflow-wrap: anywhere;
  padding: .3em;
}

input {
  box-sizing: content-box;
  width: 100%;
  height: 100%;
  max-width: 1500px;
  border: none;
  border-bottom: 5px solid;
  border-top: 5px solid rgb(255 255 255 / 0%);
  mix-blend-mode: color-dodge;
  text-align: center;
  display: flex;
  font-size: 1.5em;
  font-weight: lighter;
  font-style: oblique;
  transition: all .3s ease;
}

input:focus {
  outline: none;
  border-left: 5px solid;
  border-top: 5px solid;
  border-right: 5px solid;
}

input::placeholder {
  color: black;
  font-size: .9em;
}

input:focus::placeholder {
  opacity: 0;
}

.card-input {
  width: 100%;
  padding: 0;
  height: 100px;
  min-height: 100px;
  align-items: flex-end;
  height: auto;
  min-height: auto;
  margin-top: 4em;
}

/* animations */
@keyframes rotate-color {
  0% {
    opacity: 1;
    transform: scaleX(1) scaleY(1);
  }
  25% {
    opacity: .7;
    transform: scaleX(3) scaleY(3); 
  }
  50% {
    opacity: .4;
    transform: scaleX(1) scaleY(5);
  }
  75% {
    opacity: .8;
    transform: scaleX(1.3) scaleY(1.5);
  }
  100% {
    opacity: 1;
    transform: scaleX(1) scaleY(1);
  }
}

/* if we want to only add a class, and have the gradient generate, we probably need to then create a div 
that will wrap around it, or maybe an ::after element could be used.
Plus maybe a background color on this one in combo. But it all needs to be generated. 
Which will have to be JS. Let's style it, then turn it into an injection. */
.border--lava {
  color: var(--fallback-lava-color);
  display: flex;
  justify-content: center;
  align-items: center;
  width: 300px;
  height: 300px;
  font-size: 30px;
  font-weight: bold;
}

.another-test {
  position: absolute;
  width: 300px;
  height: 300px;
  background: linear-gradient(-20deg, var(--lava-color2), var(--lava-color1));
}

/* I don't think background clip will allow us to animate... */
/* BUT it is selectable. That's important */
@supports(background-clip: text) or (-webkit-background-clip: text) {

  .test {
    background: linear-gradient(-20deg, var(--lava-color2), var(--lava-color1));
  }

  .border--lava {
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

}


/* TEST with MIX-BLEND-MODE */
.lava-blend-parent {
  background: white;
  width: auto;
  height: auto;
  position: relative;
  overflow: hidden;
  display: flex;
}

.lava-blend-parent .lava-text {
  width: 100%;
  height: 100%;
  background: white;
  color: black;
  font-size: 30px;
  font-weight: bold;
  display: flex;
  justify-content: center;
  align-items: center;
  mix-blend-mode: lighten;
  position: relative;
  align-self: normal;
}

.lava-blend-parent .lava-bg {
  background: linear-gradient(-20deg, yellow, var(--lava-color1));
  
  /* Should be calced by JS to match the width of the parent element so it can rotate around */
  width: 250px; 
  /* Should be calced by JS to match the width of the parent element so it can rotate around (only use if animated)*/
  height: 250px;

  position: absolute;
  transform: translate(0, -50%);
  top: 50%;
}

.lava-blend-parent .lava-drop-1 {
  position: absolute;
  background: #16c937;
  width: 100px;
  height: 100px;
  /* Both of these should be handled by JS too. Or a Keyframe */
  transform: translate(0px, -39px);
  border-radius: 50% 30% 50% 36%;
  filter: blur(5px);
  align-self: normal;
}